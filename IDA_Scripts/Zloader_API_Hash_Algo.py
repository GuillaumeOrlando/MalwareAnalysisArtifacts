# Guillaume Orlando
# 11/07/2020
# Automous script from IDA that calculate some API hash with the same algorithm as Zloader

import pefile

export_file = "zloader_resolved_api.txt"
dll_pool = [ "kernel32.dll", "shell32.dll", "ole32.dll", "user32.dll", "wininet.dll", "psapi.dll", "shlwapi.dll", "ws2_32.dll", "user32.dll" ]
full_resolve = []

def load_API():
    for dll in dll_pool:
        dll_func = []
        dll_func.append(dll)
        pe = pefile.PE("C:\\Windows\\System32\\" + dll)
        for exp in pe.DIRECTORY_ENTRY_EXPORT.symbols:
            if str(exp.name) != 'None':
                api_fullname = str(exp.name, 'utf-8').lower()
                dll_func.append(str(api_fullname) + ":" + str(hash_api(api_fullname)))
        full_resolve.append(dll_func)
    return full_resolve

def hash_api(api_lowercase):
    len_api = len(api_lowercase)
    ebx = 0x0
    loop = False

    for x in range(0, len_api):
        esi = ord(api_lowercase[x]) + (ebx << 4)
        ebx = esi
        if (len(str(hex(ebx))) == 10):
            loop = True
        ebx = ebx & 0xF0000000

        if loop == True:
            eax = (0x0FFFFFFF ^ 0xFFFFFFFF) | ~ esi & 0xFFFFFFFF
            esi = (eax & (ebx >> 0x18)) | ~ (eax | (ebx >> 0x18)) & 0xFFFFFFFF
            loop = False
        ebx = esi
    #print("[+] " + str(api_lowercase) + " : " + hex(esi))
    return hex(esi)

content = load_API()

f = open(export_file, "w")
f.write(str(content))
f.close()