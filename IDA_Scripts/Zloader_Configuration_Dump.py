# Guillaume Orlando
# 19/07/2020
# Static config dumper for Zloader. Find the config RC4 key and C2 server

import binascii
import pefile
import codecs
import sys

state = [None] * 256
p = q = None

def setKey(key):
	global p, q, state
	state = [n for n in range(256)]
	p = q = j = 0
	for i in range(256):
		j = (j + state[i] + key[i % len(key)]) % 256
		state[i], state[j] = state[j], state[i]

def byteGenerator():
	global p, q, state
	p = (p + 1) % 256
	q = (q + state[p]) % 256
	state[p], state[q] = state[q], state[p]
	return state[(state[p] + state[q]) % 256]

def decrypt(key, ciphertext):
	ct = string_to_list(ciphertext)
	pt = rc4(key, ct)
	return list_to_string(pt)

def string_to_list(input_srt):
	res = [ch for ch in binascii.unhexlify(input_srt)]
	return res

def list_to_string(lst):
	res = ''.join(["%0.2X" % el for el in lst])
	return res

def rc4(key, ints):
	setKey(string_to_list(key))
	return [x ^ byteGenerator() for x in ints]

if (len(sys.argv) != 2):
    print("Usage: " + str(sys.argv[0]) + " <zloader exe sample>")

filename = sys.argv[1]
pe = pefile.PE(filename)
c = 0

for section in pe.sections:
    if (str(section.Name, "utf-8").replace("\x00","") == '.data'):
        content = pe.sections[c].get_data()[:section.SizeOfRawData]
        encrypted = str(content).split("\\x00\\x00\\x00")[1]
        key = str(encrypted.split("\\x")[-1])[2:]
        data = str(content.hex()).split("000000")[1]
        config = codecs.decode(data, 'hex_codec')
    c += 1

result = decrypt(key.encode("utf-8").hex(), bytes.hex(config)).encode('utf-8')
decrypted = binascii.unhexlify(result)
c2 = []
c2_num = int(len(str(decrypted).split("http"))) - 1
for x in range(1, c2_num):
    c2.append("http" + str(str(decrypted).split("http")[x]).replace("\\x00",""))

new_rc4 = next(s for s in str(decrypted).split(".php")[-1].split("\\x00") if s)

print("RC4 Key: " + str(key))
print("Extracted Zloader Config:")
for addr in c2:
    print(" - " + str(addr))
print("New RC4 Key: " + str(new_rc4))
